package org.abc.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Iterator;

public class VentaExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	public VentaExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		protected void addCriterionForJDBCTime(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Time(value.getTime()), property);
		}

		protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Time> timeList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				timeList.add(new java.sql.Time(iter.next().getTime()));
			}
			addCriterion(condition, timeList, property);
		}

		protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
		}

		public Criteria andIdVentaIsNull() {
			addCriterion("id_venta is null");
			return (Criteria) this;
		}

		public Criteria andIdVentaIsNotNull() {
			addCriterion("id_venta is not null");
			return (Criteria) this;
		}

		public Criteria andIdVentaEqualTo(Integer value) {
			addCriterion("id_venta =", value, "idVenta");
			return (Criteria) this;
		}

		public Criteria andIdVentaNotEqualTo(Integer value) {
			addCriterion("id_venta <>", value, "idVenta");
			return (Criteria) this;
		}

		public Criteria andIdVentaGreaterThan(Integer value) {
			addCriterion("id_venta >", value, "idVenta");
			return (Criteria) this;
		}

		public Criteria andIdVentaGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_venta >=", value, "idVenta");
			return (Criteria) this;
		}

		public Criteria andIdVentaLessThan(Integer value) {
			addCriterion("id_venta <", value, "idVenta");
			return (Criteria) this;
		}

		public Criteria andIdVentaLessThanOrEqualTo(Integer value) {
			addCriterion("id_venta <=", value, "idVenta");
			return (Criteria) this;
		}

		public Criteria andIdVentaIn(List<Integer> values) {
			addCriterion("id_venta in", values, "idVenta");
			return (Criteria) this;
		}

		public Criteria andIdVentaNotIn(List<Integer> values) {
			addCriterion("id_venta not in", values, "idVenta");
			return (Criteria) this;
		}

		public Criteria andIdVentaBetween(Integer value1, Integer value2) {
			addCriterion("id_venta between", value1, value2, "idVenta");
			return (Criteria) this;
		}

		public Criteria andIdVentaNotBetween(Integer value1, Integer value2) {
			addCriterion("id_venta not between", value1, value2, "idVenta");
			return (Criteria) this;
		}

		public Criteria andIdPersonaIsNull() {
			addCriterion("id_persona is null");
			return (Criteria) this;
		}

		public Criteria andIdPersonaIsNotNull() {
			addCriterion("id_persona is not null");
			return (Criteria) this;
		}

		public Criteria andIdPersonaEqualTo(Integer value) {
			addCriterion("id_persona =", value, "idPersona");
			return (Criteria) this;
		}

		public Criteria andIdPersonaNotEqualTo(Integer value) {
			addCriterion("id_persona <>", value, "idPersona");
			return (Criteria) this;
		}

		public Criteria andIdPersonaGreaterThan(Integer value) {
			addCriterion("id_persona >", value, "idPersona");
			return (Criteria) this;
		}

		public Criteria andIdPersonaGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_persona >=", value, "idPersona");
			return (Criteria) this;
		}

		public Criteria andIdPersonaLessThan(Integer value) {
			addCriterion("id_persona <", value, "idPersona");
			return (Criteria) this;
		}

		public Criteria andIdPersonaLessThanOrEqualTo(Integer value) {
			addCriterion("id_persona <=", value, "idPersona");
			return (Criteria) this;
		}

		public Criteria andIdPersonaIn(List<Integer> values) {
			addCriterion("id_persona in", values, "idPersona");
			return (Criteria) this;
		}

		public Criteria andIdPersonaNotIn(List<Integer> values) {
			addCriterion("id_persona not in", values, "idPersona");
			return (Criteria) this;
		}

		public Criteria andIdPersonaBetween(Integer value1, Integer value2) {
			addCriterion("id_persona between", value1, value2, "idPersona");
			return (Criteria) this;
		}

		public Criteria andIdPersonaNotBetween(Integer value1, Integer value2) {
			addCriterion("id_persona not between", value1, value2, "idPersona");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioIsNull() {
			addCriterion("id_usuario is null");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioIsNotNull() {
			addCriterion("id_usuario is not null");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioEqualTo(Integer value) {
			addCriterion("id_usuario =", value, "idUsuario");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioNotEqualTo(Integer value) {
			addCriterion("id_usuario <>", value, "idUsuario");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioGreaterThan(Integer value) {
			addCriterion("id_usuario >", value, "idUsuario");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_usuario >=", value, "idUsuario");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioLessThan(Integer value) {
			addCriterion("id_usuario <", value, "idUsuario");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioLessThanOrEqualTo(Integer value) {
			addCriterion("id_usuario <=", value, "idUsuario");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioIn(List<Integer> values) {
			addCriterion("id_usuario in", values, "idUsuario");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioNotIn(List<Integer> values) {
			addCriterion("id_usuario not in", values, "idUsuario");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioBetween(Integer value1, Integer value2) {
			addCriterion("id_usuario between", value1, value2, "idUsuario");
			return (Criteria) this;
		}

		public Criteria andIdUsuarioNotBetween(Integer value1, Integer value2) {
			addCriterion("id_usuario not between", value1, value2, "idUsuario");
			return (Criteria) this;
		}

		public Criteria andSubtotalIsNull() {
			addCriterion("subtotal is null");
			return (Criteria) this;
		}

		public Criteria andSubtotalIsNotNull() {
			addCriterion("subtotal is not null");
			return (Criteria) this;
		}

		public Criteria andSubtotalEqualTo(BigDecimal value) {
			addCriterion("subtotal =", value, "subtotal");
			return (Criteria) this;
		}

		public Criteria andSubtotalNotEqualTo(BigDecimal value) {
			addCriterion("subtotal <>", value, "subtotal");
			return (Criteria) this;
		}

		public Criteria andSubtotalGreaterThan(BigDecimal value) {
			addCriterion("subtotal >", value, "subtotal");
			return (Criteria) this;
		}

		public Criteria andSubtotalGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("subtotal >=", value, "subtotal");
			return (Criteria) this;
		}

		public Criteria andSubtotalLessThan(BigDecimal value) {
			addCriterion("subtotal <", value, "subtotal");
			return (Criteria) this;
		}

		public Criteria andSubtotalLessThanOrEqualTo(BigDecimal value) {
			addCriterion("subtotal <=", value, "subtotal");
			return (Criteria) this;
		}

		public Criteria andSubtotalIn(List<BigDecimal> values) {
			addCriterion("subtotal in", values, "subtotal");
			return (Criteria) this;
		}

		public Criteria andSubtotalNotIn(List<BigDecimal> values) {
			addCriterion("subtotal not in", values, "subtotal");
			return (Criteria) this;
		}

		public Criteria andSubtotalBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("subtotal between", value1, value2, "subtotal");
			return (Criteria) this;
		}

		public Criteria andSubtotalNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("subtotal not between", value1, value2, "subtotal");
			return (Criteria) this;
		}

		public Criteria andDescuentoIsNull() {
			addCriterion("descuento is null");
			return (Criteria) this;
		}

		public Criteria andDescuentoIsNotNull() {
			addCriterion("descuento is not null");
			return (Criteria) this;
		}

		public Criteria andDescuentoEqualTo(BigDecimal value) {
			addCriterion("descuento =", value, "descuento");
			return (Criteria) this;
		}

		public Criteria andDescuentoNotEqualTo(BigDecimal value) {
			addCriterion("descuento <>", value, "descuento");
			return (Criteria) this;
		}

		public Criteria andDescuentoGreaterThan(BigDecimal value) {
			addCriterion("descuento >", value, "descuento");
			return (Criteria) this;
		}

		public Criteria andDescuentoGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("descuento >=", value, "descuento");
			return (Criteria) this;
		}

		public Criteria andDescuentoLessThan(BigDecimal value) {
			addCriterion("descuento <", value, "descuento");
			return (Criteria) this;
		}

		public Criteria andDescuentoLessThanOrEqualTo(BigDecimal value) {
			addCriterion("descuento <=", value, "descuento");
			return (Criteria) this;
		}

		public Criteria andDescuentoIn(List<BigDecimal> values) {
			addCriterion("descuento in", values, "descuento");
			return (Criteria) this;
		}

		public Criteria andDescuentoNotIn(List<BigDecimal> values) {
			addCriterion("descuento not in", values, "descuento");
			return (Criteria) this;
		}

		public Criteria andDescuentoBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("descuento between", value1, value2, "descuento");
			return (Criteria) this;
		}

		public Criteria andDescuentoNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("descuento not between", value1, value2, "descuento");
			return (Criteria) this;
		}

		public Criteria andTotalIsNull() {
			addCriterion("total is null");
			return (Criteria) this;
		}

		public Criteria andTotalIsNotNull() {
			addCriterion("total is not null");
			return (Criteria) this;
		}

		public Criteria andTotalEqualTo(BigDecimal value) {
			addCriterion("total =", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalNotEqualTo(BigDecimal value) {
			addCriterion("total <>", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalGreaterThan(BigDecimal value) {
			addCriterion("total >", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("total >=", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalLessThan(BigDecimal value) {
			addCriterion("total <", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalLessThanOrEqualTo(BigDecimal value) {
			addCriterion("total <=", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalIn(List<BigDecimal> values) {
			addCriterion("total in", values, "total");
			return (Criteria) this;
		}

		public Criteria andTotalNotIn(List<BigDecimal> values) {
			addCriterion("total not in", values, "total");
			return (Criteria) this;
		}

		public Criteria andTotalBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("total between", value1, value2, "total");
			return (Criteria) this;
		}

		public Criteria andTotalNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("total not between", value1, value2, "total");
			return (Criteria) this;
		}

		public Criteria andEstadoIsNull() {
			addCriterion("estado is null");
			return (Criteria) this;
		}

		public Criteria andEstadoIsNotNull() {
			addCriterion("estado is not null");
			return (Criteria) this;
		}

		public Criteria andEstadoEqualTo(String value) {
			addCriterion("venta.estado =", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoNotEqualTo(String value) {
			addCriterion("estado <>", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoGreaterThan(String value) {
			addCriterion("estado >", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoGreaterThanOrEqualTo(String value) {
			addCriterion("estado >=", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoLessThan(String value) {
			addCriterion("estado <", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoLessThanOrEqualTo(String value) {
			addCriterion("estado <=", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoLike(String value) {
			addCriterion("estado like", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoNotLike(String value) {
			addCriterion("estado not like", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoIn(List<String> values) {
			addCriterion("estado in", values, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoNotIn(List<String> values) {
			addCriterion("estado not in", values, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoBetween(String value1, String value2) {
			addCriterion("estado between", value1, value2, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoNotBetween(String value1, String value2) {
			addCriterion("estado not between", value1, value2, "estado");
			return (Criteria) this;
		}

		public Criteria andFechaRegIsNull() {
			addCriterion("fecha_reg is null");
			return (Criteria) this;
		}

		public Criteria andFechaRegIsNotNull() {
			addCriterion("fecha_reg is not null");
			return (Criteria) this;
		}

		public Criteria andFechaRegEqualTo(Date value) {
			addCriterion("fecha_reg =", value, "fechaReg");
			return (Criteria) this;
		}

		public Criteria andFechaRegNotEqualTo(Date value) {
			addCriterion("fecha_reg <>", value, "fechaReg");
			return (Criteria) this;
		}

		public Criteria andFechaRegGreaterThan(Date value) {
			addCriterion("fecha_reg >", value, "fechaReg");
			return (Criteria) this;
		}

		public Criteria andFechaRegGreaterThanOrEqualTo(Date value) {
			addCriterion("fecha_reg >=", value, "fechaReg");
			return (Criteria) this;
		}

		public Criteria andFechaRegLessThan(Date value) {
			addCriterion("fecha_reg <", value, "fechaReg");
			return (Criteria) this;
		}

		public Criteria andFechaRegLessThanOrEqualTo(Date value) {
			addCriterion("fecha_reg <=", value, "fechaReg");
			return (Criteria) this;
		}

		public Criteria andFechaRegIn(List<Date> values) {
			addCriterion("fecha_reg in", values, "fechaReg");
			return (Criteria) this;
		}

		public Criteria andFechaRegNotIn(List<Date> values) {
			addCriterion("fecha_reg not in", values, "fechaReg");
			return (Criteria) this;
		}

		public Criteria andFechaRegBetween(Date value1, Date value2) {
			addCriterion("fecha_reg between", value1, value2, "fechaReg");
			return (Criteria) this;
		}

		public Criteria andFechaRegNotBetween(Date value1, Date value2) {
			addCriterion("fecha_reg not between", value1, value2, "fechaReg");
			return (Criteria) this;
		}

		public Criteria andFechaModIsNull() {
			addCriterion("fecha_mod is null");
			return (Criteria) this;
		}

		public Criteria andFechaModIsNotNull() {
			addCriterion("fecha_mod is not null");
			return (Criteria) this;
		}

		public Criteria andFechaModEqualTo(Date value) {
			addCriterion("fecha_mod =", value, "fechaMod");
			return (Criteria) this;
		}

		public Criteria andFechaModNotEqualTo(Date value) {
			addCriterion("fecha_mod <>", value, "fechaMod");
			return (Criteria) this;
		}

		public Criteria andFechaModGreaterThan(Date value) {
			addCriterion("fecha_mod >", value, "fechaMod");
			return (Criteria) this;
		}

		public Criteria andFechaModGreaterThanOrEqualTo(Date value) {
			addCriterion("fecha_mod >=", value, "fechaMod");
			return (Criteria) this;
		}

		public Criteria andFechaModLessThan(Date value) {
			addCriterion("fecha_mod <", value, "fechaMod");
			return (Criteria) this;
		}

		public Criteria andFechaModLessThanOrEqualTo(Date value) {
			addCriterion("fecha_mod <=", value, "fechaMod");
			return (Criteria) this;
		}

		public Criteria andFechaModIn(List<Date> values) {
			addCriterion("fecha_mod in", values, "fechaMod");
			return (Criteria) this;
		}

		public Criteria andFechaModNotIn(List<Date> values) {
			addCriterion("fecha_mod not in", values, "fechaMod");
			return (Criteria) this;
		}

		public Criteria andFechaModBetween(Date value1, Date value2) {
			addCriterion("fecha_mod between", value1, value2, "fechaMod");
			return (Criteria) this;
		}

		public Criteria andFechaModNotBetween(Date value1, Date value2) {
			addCriterion("fecha_mod not between", value1, value2, "fechaMod");
			return (Criteria) this;
		}

		public Criteria andFechaIsNull() {
			addCriterion("fecha is null");
			return (Criteria) this;
		}

		public Criteria andFechaIsNotNull() {
			addCriterion("fecha is not null");
			return (Criteria) this;
		}

		public Criteria andFechaEqualTo(Date value) {
			addCriterionForJDBCDate("fecha =", value, "fecha");
			return (Criteria) this;
		}

		public Criteria andFechaNotEqualTo(Date value) {
			addCriterionForJDBCDate("fecha <>", value, "fecha");
			return (Criteria) this;
		}

		public Criteria andFechaGreaterThan(Date value) {
			addCriterionForJDBCDate("fecha >", value, "fecha");
			return (Criteria) this;
		}

		public Criteria andFechaGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fecha >=", value, "fecha");
			return (Criteria) this;
		}

		public Criteria andFechaLessThan(Date value) {
			addCriterionForJDBCDate("fecha <", value, "fecha");
			return (Criteria) this;
		}

		public Criteria andFechaLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fecha <=", value, "fecha");
			return (Criteria) this;
		}

		public Criteria andFechaIn(List<Date> values) {
			addCriterionForJDBCDate("fecha in", values, "fecha");
			return (Criteria) this;
		}

		public Criteria andFechaNotIn(List<Date> values) {
			addCriterionForJDBCDate("fecha not in", values, "fecha");
			return (Criteria) this;
		}

		public Criteria andFechaBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fecha between", value1, value2, "fecha");
			return (Criteria) this;
		}

		public Criteria andFechaNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fecha not between", value1, value2, "fecha");
			return (Criteria) this;
		}

		public Criteria andHoraIsNull() {
			addCriterion("hora is null");
			return (Criteria) this;
		}

		public Criteria andHoraIsNotNull() {
			addCriterion("hora is not null");
			return (Criteria) this;
		}

		public Criteria andHoraEqualTo(Date value) {
			addCriterionForJDBCTime("hora =", value, "hora");
			return (Criteria) this;
		}

		public Criteria andHoraNotEqualTo(Date value) {
			addCriterionForJDBCTime("hora <>", value, "hora");
			return (Criteria) this;
		}

		public Criteria andHoraGreaterThan(Date value) {
			addCriterionForJDBCTime("hora >", value, "hora");
			return (Criteria) this;
		}

		public Criteria andHoraGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCTime("hora >=", value, "hora");
			return (Criteria) this;
		}

		public Criteria andHoraLessThan(Date value) {
			addCriterionForJDBCTime("hora <", value, "hora");
			return (Criteria) this;
		}

		public Criteria andHoraLessThanOrEqualTo(Date value) {
			addCriterionForJDBCTime("hora <=", value, "hora");
			return (Criteria) this;
		}

		public Criteria andHoraIn(List<Date> values) {
			addCriterionForJDBCTime("hora in", values, "hora");
			return (Criteria) this;
		}

		public Criteria andHoraNotIn(List<Date> values) {
			addCriterionForJDBCTime("hora not in", values, "hora");
			return (Criteria) this;
		}

		public Criteria andHoraBetween(Date value1, Date value2) {
			addCriterionForJDBCTime("hora between", value1, value2, "hora");
			return (Criteria) this;
		}

		public Criteria andHoraNotBetween(Date value1, Date value2) {
			addCriterionForJDBCTime("hora not between", value1, value2, "hora");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.venta
	 * @mbg.generated  Sat Sep 19 19:28:04 BOT 2020
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.venta
     *
     * @mbg.generated do_not_delete_during_merge Sat Sep 19 19:14:23 BOT 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}