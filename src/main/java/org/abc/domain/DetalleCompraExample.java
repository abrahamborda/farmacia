package org.abc.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DetalleCompraExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	public DetalleCompraExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdDetalleCompraIsNull() {
			addCriterion("id_detalle_compra is null");
			return (Criteria) this;
		}

		public Criteria andIdDetalleCompraIsNotNull() {
			addCriterion("id_detalle_compra is not null");
			return (Criteria) this;
		}

		public Criteria andIdDetalleCompraEqualTo(Integer value) {
			addCriterion("id_detalle_compra =", value, "idDetalleCompra");
			return (Criteria) this;
		}

		public Criteria andIdDetalleCompraNotEqualTo(Integer value) {
			addCriterion("id_detalle_compra <>", value, "idDetalleCompra");
			return (Criteria) this;
		}

		public Criteria andIdDetalleCompraGreaterThan(Integer value) {
			addCriterion("id_detalle_compra >", value, "idDetalleCompra");
			return (Criteria) this;
		}

		public Criteria andIdDetalleCompraGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_detalle_compra >=", value, "idDetalleCompra");
			return (Criteria) this;
		}

		public Criteria andIdDetalleCompraLessThan(Integer value) {
			addCriterion("id_detalle_compra <", value, "idDetalleCompra");
			return (Criteria) this;
		}

		public Criteria andIdDetalleCompraLessThanOrEqualTo(Integer value) {
			addCriterion("id_detalle_compra <=", value, "idDetalleCompra");
			return (Criteria) this;
		}

		public Criteria andIdDetalleCompraIn(List<Integer> values) {
			addCriterion("id_detalle_compra in", values, "idDetalleCompra");
			return (Criteria) this;
		}

		public Criteria andIdDetalleCompraNotIn(List<Integer> values) {
			addCriterion("id_detalle_compra not in", values, "idDetalleCompra");
			return (Criteria) this;
		}

		public Criteria andIdDetalleCompraBetween(Integer value1, Integer value2) {
			addCriterion("id_detalle_compra between", value1, value2, "idDetalleCompra");
			return (Criteria) this;
		}

		public Criteria andIdDetalleCompraNotBetween(Integer value1, Integer value2) {
			addCriterion("id_detalle_compra not between", value1, value2, "idDetalleCompra");
			return (Criteria) this;
		}

		public Criteria andIdCompraIsNull() {
			addCriterion("id_compra is null");
			return (Criteria) this;
		}

		public Criteria andIdCompraIsNotNull() {
			addCriterion("id_compra is not null");
			return (Criteria) this;
		}

		public Criteria andIdCompraEqualTo(Integer value) {
			addCriterion("id_compra =", value, "idCompra");
			return (Criteria) this;
		}

		public Criteria andIdCompraNotEqualTo(Integer value) {
			addCriterion("id_compra <>", value, "idCompra");
			return (Criteria) this;
		}

		public Criteria andIdCompraGreaterThan(Integer value) {
			addCriterion("id_compra >", value, "idCompra");
			return (Criteria) this;
		}

		public Criteria andIdCompraGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_compra >=", value, "idCompra");
			return (Criteria) this;
		}

		public Criteria andIdCompraLessThan(Integer value) {
			addCriterion("id_compra <", value, "idCompra");
			return (Criteria) this;
		}

		public Criteria andIdCompraLessThanOrEqualTo(Integer value) {
			addCriterion("id_compra <=", value, "idCompra");
			return (Criteria) this;
		}

		public Criteria andIdCompraIn(List<Integer> values) {
			addCriterion("id_compra in", values, "idCompra");
			return (Criteria) this;
		}

		public Criteria andIdCompraNotIn(List<Integer> values) {
			addCriterion("id_compra not in", values, "idCompra");
			return (Criteria) this;
		}

		public Criteria andIdCompraBetween(Integer value1, Integer value2) {
			addCriterion("id_compra between", value1, value2, "idCompra");
			return (Criteria) this;
		}

		public Criteria andIdCompraNotBetween(Integer value1, Integer value2) {
			addCriterion("id_compra not between", value1, value2, "idCompra");
			return (Criteria) this;
		}

		public Criteria andIdProductoIsNull() {
			addCriterion("id_producto is null");
			return (Criteria) this;
		}

		public Criteria andIdProductoIsNotNull() {
			addCriterion("id_producto is not null");
			return (Criteria) this;
		}

		public Criteria andIdProductoEqualTo(Integer value) {
			addCriterion("id_producto =", value, "idProducto");
			return (Criteria) this;
		}

		public Criteria andIdProductoNotEqualTo(Integer value) {
			addCriterion("id_producto <>", value, "idProducto");
			return (Criteria) this;
		}

		public Criteria andIdProductoGreaterThan(Integer value) {
			addCriterion("id_producto >", value, "idProducto");
			return (Criteria) this;
		}

		public Criteria andIdProductoGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_producto >=", value, "idProducto");
			return (Criteria) this;
		}

		public Criteria andIdProductoLessThan(Integer value) {
			addCriterion("id_producto <", value, "idProducto");
			return (Criteria) this;
		}

		public Criteria andIdProductoLessThanOrEqualTo(Integer value) {
			addCriterion("id_producto <=", value, "idProducto");
			return (Criteria) this;
		}

		public Criteria andIdProductoIn(List<Integer> values) {
			addCriterion("id_producto in", values, "idProducto");
			return (Criteria) this;
		}

		public Criteria andIdProductoNotIn(List<Integer> values) {
			addCriterion("id_producto not in", values, "idProducto");
			return (Criteria) this;
		}

		public Criteria andIdProductoBetween(Integer value1, Integer value2) {
			addCriterion("id_producto between", value1, value2, "idProducto");
			return (Criteria) this;
		}

		public Criteria andIdProductoNotBetween(Integer value1, Integer value2) {
			addCriterion("id_producto not between", value1, value2, "idProducto");
			return (Criteria) this;
		}

		public Criteria andCantidadIsNull() {
			addCriterion("cantidad is null");
			return (Criteria) this;
		}

		public Criteria andCantidadIsNotNull() {
			addCriterion("cantidad is not null");
			return (Criteria) this;
		}

		public Criteria andCantidadEqualTo(Integer value) {
			addCriterion("cantidad =", value, "cantidad");
			return (Criteria) this;
		}

		public Criteria andCantidadNotEqualTo(Integer value) {
			addCriterion("cantidad <>", value, "cantidad");
			return (Criteria) this;
		}

		public Criteria andCantidadGreaterThan(Integer value) {
			addCriterion("cantidad >", value, "cantidad");
			return (Criteria) this;
		}

		public Criteria andCantidadGreaterThanOrEqualTo(Integer value) {
			addCriterion("cantidad >=", value, "cantidad");
			return (Criteria) this;
		}

		public Criteria andCantidadLessThan(Integer value) {
			addCriterion("cantidad <", value, "cantidad");
			return (Criteria) this;
		}

		public Criteria andCantidadLessThanOrEqualTo(Integer value) {
			addCriterion("cantidad <=", value, "cantidad");
			return (Criteria) this;
		}

		public Criteria andCantidadIn(List<Integer> values) {
			addCriterion("cantidad in", values, "cantidad");
			return (Criteria) this;
		}

		public Criteria andCantidadNotIn(List<Integer> values) {
			addCriterion("cantidad not in", values, "cantidad");
			return (Criteria) this;
		}

		public Criteria andCantidadBetween(Integer value1, Integer value2) {
			addCriterion("cantidad between", value1, value2, "cantidad");
			return (Criteria) this;
		}

		public Criteria andCantidadNotBetween(Integer value1, Integer value2) {
			addCriterion("cantidad not between", value1, value2, "cantidad");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioIsNull() {
			addCriterion("precio_unitario is null");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioIsNotNull() {
			addCriterion("precio_unitario is not null");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioEqualTo(BigDecimal value) {
			addCriterion("precio_unitario =", value, "precioUnitario");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioNotEqualTo(BigDecimal value) {
			addCriterion("precio_unitario <>", value, "precioUnitario");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioGreaterThan(BigDecimal value) {
			addCriterion("precio_unitario >", value, "precioUnitario");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("precio_unitario >=", value, "precioUnitario");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioLessThan(BigDecimal value) {
			addCriterion("precio_unitario <", value, "precioUnitario");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioLessThanOrEqualTo(BigDecimal value) {
			addCriterion("precio_unitario <=", value, "precioUnitario");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioIn(List<BigDecimal> values) {
			addCriterion("precio_unitario in", values, "precioUnitario");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioNotIn(List<BigDecimal> values) {
			addCriterion("precio_unitario not in", values, "precioUnitario");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("precio_unitario between", value1, value2, "precioUnitario");
			return (Criteria) this;
		}

		public Criteria andPrecioUnitarioNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("precio_unitario not between", value1, value2, "precioUnitario");
			return (Criteria) this;
		}

		public Criteria andImporteIsNull() {
			addCriterion("importe is null");
			return (Criteria) this;
		}

		public Criteria andImporteIsNotNull() {
			addCriterion("importe is not null");
			return (Criteria) this;
		}

		public Criteria andImporteEqualTo(BigDecimal value) {
			addCriterion("importe =", value, "importe");
			return (Criteria) this;
		}

		public Criteria andImporteNotEqualTo(BigDecimal value) {
			addCriterion("importe <>", value, "importe");
			return (Criteria) this;
		}

		public Criteria andImporteGreaterThan(BigDecimal value) {
			addCriterion("importe >", value, "importe");
			return (Criteria) this;
		}

		public Criteria andImporteGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("importe >=", value, "importe");
			return (Criteria) this;
		}

		public Criteria andImporteLessThan(BigDecimal value) {
			addCriterion("importe <", value, "importe");
			return (Criteria) this;
		}

		public Criteria andImporteLessThanOrEqualTo(BigDecimal value) {
			addCriterion("importe <=", value, "importe");
			return (Criteria) this;
		}

		public Criteria andImporteIn(List<BigDecimal> values) {
			addCriterion("importe in", values, "importe");
			return (Criteria) this;
		}

		public Criteria andImporteNotIn(List<BigDecimal> values) {
			addCriterion("importe not in", values, "importe");
			return (Criteria) this;
		}

		public Criteria andImporteBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("importe between", value1, value2, "importe");
			return (Criteria) this;
		}

		public Criteria andImporteNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("importe not between", value1, value2, "importe");
			return (Criteria) this;
		}

		public Criteria andNroLoteIsNull() {
			addCriterion("nro_lote is null");
			return (Criteria) this;
		}

		public Criteria andNroLoteIsNotNull() {
			addCriterion("nro_lote is not null");
			return (Criteria) this;
		}

		public Criteria andNroLoteEqualTo(Integer value) {
			addCriterion("nro_lote =", value, "nroLote");
			return (Criteria) this;
		}

		public Criteria andNroLoteNotEqualTo(Integer value) {
			addCriterion("nro_lote <>", value, "nroLote");
			return (Criteria) this;
		}

		public Criteria andNroLoteGreaterThan(Integer value) {
			addCriterion("nro_lote >", value, "nroLote");
			return (Criteria) this;
		}

		public Criteria andNroLoteGreaterThanOrEqualTo(Integer value) {
			addCriterion("nro_lote >=", value, "nroLote");
			return (Criteria) this;
		}

		public Criteria andNroLoteLessThan(Integer value) {
			addCriterion("nro_lote <", value, "nroLote");
			return (Criteria) this;
		}

		public Criteria andNroLoteLessThanOrEqualTo(Integer value) {
			addCriterion("nro_lote <=", value, "nroLote");
			return (Criteria) this;
		}

		public Criteria andNroLoteIn(List<Integer> values) {
			addCriterion("nro_lote in", values, "nroLote");
			return (Criteria) this;
		}

		public Criteria andNroLoteNotIn(List<Integer> values) {
			addCriterion("nro_lote not in", values, "nroLote");
			return (Criteria) this;
		}

		public Criteria andNroLoteBetween(Integer value1, Integer value2) {
			addCriterion("nro_lote between", value1, value2, "nroLote");
			return (Criteria) this;
		}

		public Criteria andNroLoteNotBetween(Integer value1, Integer value2) {
			addCriterion("nro_lote not between", value1, value2, "nroLote");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoIsNull() {
			addCriterion("fec_vencimiento is null");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoIsNotNull() {
			addCriterion("fec_vencimiento is not null");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoEqualTo(Date value) {
			addCriterionForJDBCDate("fec_vencimiento =", value, "fecVencimiento");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoNotEqualTo(Date value) {
			addCriterionForJDBCDate("fec_vencimiento <>", value, "fecVencimiento");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoGreaterThan(Date value) {
			addCriterionForJDBCDate("fec_vencimiento >", value, "fecVencimiento");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fec_vencimiento >=", value, "fecVencimiento");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoLessThan(Date value) {
			addCriterionForJDBCDate("fec_vencimiento <", value, "fecVencimiento");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fec_vencimiento <=", value, "fecVencimiento");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoIn(List<Date> values) {
			addCriterionForJDBCDate("fec_vencimiento in", values, "fecVencimiento");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoNotIn(List<Date> values) {
			addCriterionForJDBCDate("fec_vencimiento not in", values, "fecVencimiento");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fec_vencimiento between", value1, value2, "fecVencimiento");
			return (Criteria) this;
		}

		public Criteria andFecVencimientoNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fec_vencimiento not between", value1, value2, "fecVencimiento");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaIsNull() {
			addCriterion("precio_venta is null");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaIsNotNull() {
			addCriterion("precio_venta is not null");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaEqualTo(BigDecimal value) {
			addCriterion("precio_venta =", value, "precioVenta");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaNotEqualTo(BigDecimal value) {
			addCriterion("precio_venta <>", value, "precioVenta");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaGreaterThan(BigDecimal value) {
			addCriterion("precio_venta >", value, "precioVenta");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("precio_venta >=", value, "precioVenta");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaLessThan(BigDecimal value) {
			addCriterion("precio_venta <", value, "precioVenta");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaLessThanOrEqualTo(BigDecimal value) {
			addCriterion("precio_venta <=", value, "precioVenta");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaIn(List<BigDecimal> values) {
			addCriterion("precio_venta in", values, "precioVenta");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaNotIn(List<BigDecimal> values) {
			addCriterion("precio_venta not in", values, "precioVenta");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("precio_venta between", value1, value2, "precioVenta");
			return (Criteria) this;
		}

		public Criteria andPrecioVentaNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("precio_venta not between", value1, value2, "precioVenta");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.detalle_compra
	 * @mbg.generated  Fri Sep 18 15:30:47 BOT 2020
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.detalle_compra
     *
     * @mbg.generated do_not_delete_during_merge Fri Sep 18 11:02:07 BOT 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}